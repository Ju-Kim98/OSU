answers-lab3
CS544 5/22/2023
JuHyunKim

1. What is the purpose of having an individual handler function for each exception/interrupt?
    (i.e., if all exceptions/interrupts were delivered to the same handler, 
    what feature that exists in the current implementation could not be provided?)
=> It is used to prevent performance degradation of the processor.


2. Did you have to do anything to make the user/softint program behave correctly? => Nothing

    The grade script expects it to produce a eneral protection fault (trap 13), but softint's code sats int $14.
    Why should this produce interrup vector 13? 
    => Interrupt vector 13 needs to be created because softint does not have permission to call int$14.

    What happens if the kernel actually allows softint's int $14 instruction to invocke the kernel's page fault handler (which is interrupt vector 14)?
    =>If the int$14 instruction called interrupt vector 14, it triggers a general protection fault to provide trap number 13.


3. The break point test case will either generate a break point exception or a general protection fault 
    depending on how you initialized the break point entry in the IDT (i.e., your call to SETGATE from trap_init). 
    Why? How do you need to set it up in order to get the breakpoint exception to work as specified above 
    and what incorrect setup would cause it to trigger a general protection fault?
=>Breakpoint test cases are generated because the user privilege was set when calling SETGATE. 
    Setting by DPL=3 results in the breakpoint trap handler function correctly. Setting by DPL=0 results in a general protection error.

4. What do you think is the point of these mechanisms, particularly in light of what the user/softint test program does?
=> To protection from the user.